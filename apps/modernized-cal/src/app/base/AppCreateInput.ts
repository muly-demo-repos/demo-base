/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ApiKeyCreateNestedManyWithoutAppsInput } from "./ApiKeyCreateNestedManyWithoutAppsInput";
import { ValidateNested, IsOptional, IsEnum, IsString } from "class-validator";
import { Type } from "class-transformer";
import { EnumAppCategories } from "./EnumAppCategories";
import { CredentialCreateNestedManyWithoutAppsInput } from "./CredentialCreateNestedManyWithoutAppsInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { WebhookCreateNestedManyWithoutAppsInput } from "./WebhookCreateNestedManyWithoutAppsInput";

@InputType()
class AppCreateInput {
  @ApiProperty({
    required: false,
    type: () => ApiKeyCreateNestedManyWithoutAppsInput,
  })
  @ValidateNested()
  @Type(() => ApiKeyCreateNestedManyWithoutAppsInput)
  @IsOptional()
  @Field(() => ApiKeyCreateNestedManyWithoutAppsInput, {
    nullable: true,
  })
  apiKey?: ApiKeyCreateNestedManyWithoutAppsInput;

  @ApiProperty({
    required: true,
    enum: EnumAppCategories,
    isArray: true,
  })
  @IsEnum(EnumAppCategories, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumAppCategories], {
    nullable: true,
  })
  categories?: Array<
    "calendar" | "messaging" | "other" | "payment" | "video" | "web3"
  >;

  @ApiProperty({
    required: false,
    type: () => CredentialCreateNestedManyWithoutAppsInput,
  })
  @ValidateNested()
  @Type(() => CredentialCreateNestedManyWithoutAppsInput)
  @IsOptional()
  @Field(() => CredentialCreateNestedManyWithoutAppsInput, {
    nullable: true,
  })
  credentials?: CredentialCreateNestedManyWithoutAppsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  dirName!: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  keys?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => WebhookCreateNestedManyWithoutAppsInput,
  })
  @ValidateNested()
  @Type(() => WebhookCreateNestedManyWithoutAppsInput)
  @IsOptional()
  @Field(() => WebhookCreateNestedManyWithoutAppsInput, {
    nullable: true,
  })
  webhook?: WebhookCreateNestedManyWithoutAppsInput;
}

export { AppCreateInput as AppCreateInput };
